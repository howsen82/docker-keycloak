# Keycloak Using Docker Compose

# Change variables in the `.env` to meet your requirements
# Note that the `.env` file should be in the same directory as `docker-compose.yml`

# Create networks for your services before deploying the configuration using the commands
# docker network create keycloak-network

# Deploy Keycloak using Docker Compose
# docker-compose -p keycloak up -d

# Backups
# The `backups` container in the configuration is responsible for the following:
# 1. **Database Backup**: Creates compressed backups of the PostgreSQL database using pg_dump.
# Customizable backup path, filename pattern, and schedule through variables like `POSTGRES_BACKUPS_PATH`, `POSTGRES_BACKUP_NAME`, and `BACKUP_INTERVAL`.
# 2. **Backup Pruning**: Periodically removes backups exceeding a specified age to manage storage.
# Customizable pruning schedule and age threshold with `POSTGRES_BACKUP_PRUNE_DAYS` and `DATA_BACKUP_PRUNE_DAYS`.
# By utilizing this container, consistent and automated backups of the essential components of your instance are ensured.
# Moreover, efficient management of backup storage and tailored backup routines can be achieved through easy and flexible configuration using environment variables.

networks:
  keycloak-network:
    external: true
  traefik-network:
    external: true

volumes:
  keycloak-postgres:
  keycloak-postgres-backup:
  keycloak-database-backups:

services:
  postgres-keycloak:
    image: ${KEYCLOAK_POSTGRES_IMAGE_TAG}
    volumes:
      - keycloak-postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${KEYCLOAK_DB_NAME}
      POSTGRES_USER: ${KEYCLOAK_DB_USER}
      POSTGRES_PASSWORD: ${KEYCLOAK_DB_PASSWORD}
    networks:
      - keycloak-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB -h 127.0.0.1"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 60s
    restart: unless-stopped

  keycloak:
    image: ${KEYCLOAK_IMAGE_TAG}
    command: start
    environment:
      KC_DB: ${KEYCLOAK_DB_TYPE}
      KC_DB_URL_HOST: postgres-keycloak
      KC_DB_URL_PORT: 5432
      KC_DB_URL_DATABASE: ${KEYCLOAK_DB_NAME}
      KC_DB_USERNAME: ${KEYCLOAK_DB_USER}
      KC_DB_PASSWORD: ${KEYCLOAK_DB_PASSWORD}
      KC_DB_SCHEMA: public
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN_USERNAME}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      KC_HOSTNAME: ${KEYCLOAK_HOSTNAME}
      KC_PROXY: edge
      KC_PROXY_ADDRESS_FORWARDING: 'true'
      KC_HTTP_ENABLED: 'true'
      KC_HEALTH_ENABLED: 'true'
      KC_METRICS_ENABLED: 'true'
      KEYCLOAK_LOGLEVEL: ${KEYCLOAK_LOG_LEVEL}
    networks:
      - keycloak-network
    restart: unless-stopped
    depends_on:
      postgres-keycloak:
        condition: service_healthy

  # backups-keycloak:
  #   image: ${KEYCLOAK_POSTGRES_IMAGE_TAG}
  #   command: >-
  #     sh -c 'sleep $KEYCLOAK_BACKUP_INIT_SLEEP &&
  #     while true; do
  #       pg_dump -h postgres-keycloak -p 5432 -d $KEYCLOAK_DB_NAME -U $KEYCLOAK_DB_USER | gzip > $KEYCLOAK_POSTGRES_BACKUPS_PATH/$KEYCLOAK_POSTGRES_BACKUP_NAME-$(date "+%Y-%m-%d_%H-%M").gz &&
  #       find $KEYCLOAK_POSTGRES_BACKUPS_PATH -type f -mtime +$KEYCLOAK_POSTGRES_BACKUP_PRUNE_DAYS | xargs rm -f &&
  #       sleep $KEYCLOAK_BACKUP_INTERVAL; done'
  #   volumes:
  #     - keycloak-postgres-backup:/var/lib/postgresql/data
  #     - keycloak-database-backups:${KEYCLOAK_POSTGRES_BACKUPS_PATH}
  #   environment:
  #     KEYCLOAK_DB_NAME: ${KEYCLOAK_DB_NAME}
  #     KEYCLOAK_DB_USER: ${KEYCLOAK_DB_USER}
  #     PGPASSWORD: ${KEYCLOAK_DB_PASSWORD}
  #     KEYCLOAK_BACKUP_INIT_SLEEP: ${KEYCLOAK_BACKUP_INIT_SLEEP}
  #     KEYCLOAK_BACKUP_INTERVAL: ${KEYCLOAK_BACKUP_INTERVAL}
  #     KEYCLOAK_POSTGRES_BACKUP_PRUNE_DAYS: ${KEYCLOAK_POSTGRES_BACKUP_PRUNE_DAYS}
  #     KEYCLOAK_POSTGRES_BACKUPS_PATH: ${KEYCLOAK_POSTGRES_BACKUPS_PATH}
  #     KEYCLOAK_POSTGRES_BACKUP_NAME: ${KEYCLOAK_POSTGRES_BACKUP_NAME}
  #   networks:
  #     - keycloak-network
  #   restart: unless-stopped
  #   depends_on:
  #     postgres-keycloak:
  #       condition: service_healthy